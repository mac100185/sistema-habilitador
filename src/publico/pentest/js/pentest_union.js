let bto_Herra_Uni = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa-solid fa-toolbox"></i>',
        tooltip: 'Code',        
        title: 'Crear Boton',
        click: function (value) {
            
            var text = context.invoke('editor.getSelectedText');
            let jim = text.split("_");
            let $node = $(`<a class="botonHerramienta" data-bs-toggle="modal" data-bs-target="#modalHerramienta" name="btoHerramienta" id="${text}">${jim[1]}</a>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let bto_Servi_Uni = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa-solid fa-globe"></i>',
        tooltip: 'Code',
        title : 'RKO',
      
        click: function (value) {
            
            var text = context.invoke('editor.getSelectedText');
            let jim = text.split("_");
            let $node = $(`<a class="botonServicio" data-bs-toggle="modal" data-bs-target="#modalServicioUni" name="btoServicioUni" id="${jim[0]}_servicio">${jim[1]}</a>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonTituloPrima = function (context) {
    var ui = $.summernote.ui;
    // create button
    var button = ui.button({
        contents: 'TI-P',
        tooltip: 'Code',
        class: "enlace",
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/ /g, "_");
            // You can initialize node with class instead of calling addClass.
            var $node = $('<a class="enlacePrimario" name=tp_' + jim + '>' + text + '</a>');
            // http://summernote.org/deep-dive/#insertnode
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonTitulo = function (context) {
    var ui = $.summernote.ui;
    // create button
    var button = ui.button({
        contents: 'Título',
        tooltip: 'Code',
        class: "enlace",
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/ /g, "_");
            // You can initialize node with class instead of calling addClass.
            var $node = $('<a class="enlace" name=' + jim + '>' + text + '</a>');
            // http://summernote.org/deep-dive/#insertnode
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}


let botonSubTitulo = function (context) {
    var ui = $.summernote.ui;

    // create button
    var button = ui.button({
        contents: 'Subtítulo',
        tooltip: 'Code',
        class: "subEnlace",
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/ /g, "_");
            // You can initialize node with class instead of calling addClass.
            var $node = $('<a class="subEnlace" name=sub' + jim + '>' + text + '</a>');
            // http://summernote.org/deep-dive/#insertnode
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object


}
let botonEnlacePri = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: 'Enlace Principal',
        tooltip: 'Code',
        class: "enlace",
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/ /g, "_");
            let $node = $(`<div class='irEnlaceBorde'><a class='irEnlacePrin' href="#tp_${jim}">${text}</a></div`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonEnlace = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: 'Enlace',
        tooltip: 'Code',
        class: "enlace",
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/ /g, "_");
            let $node = $(`<a class='irEnlace' href="#${jim}">${text}</a>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonSubEnlace = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: 'Subenlace',
        tooltip: 'Code',
        class: "irSubEnlace",
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/ /g, "_");
            let $node = $(`<a class='irSubEnlace' href="#sub${jim}">${text}</a>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}
let botonEnlaceCua = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '|Enla|',
        tooltip: 'Code',
        class: "enlace",
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/ /g, "_");
            let $node = $(`<div class='irEnlaceCua'><a class='irEnlace' href="#${jim}">${text}</a></div>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonSubEnlaceCua = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '|Suben|',
        tooltip: 'Code',
        class: "irSubEnlace",
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/ /g, "_");
            let $node = $(`<div class='irSubEnlaceCua'><a class='irSubEnlace' href="#sub${jim}">${text}</a></div>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}
let botonIrA = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: 'Ir A',
        tooltip: 'Code',
        class: "irA",
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/ /g, "_");
            let $node = $(`<a class='irA' href="#sub${jim}">${text}</a>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonTarget = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: 'Target',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let $node = $(`<pre class="command-line language-shell" data-user="user" data-host="Target"><code>${text}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });

    return button.render(); // return button as jquery object
}


let botonKali = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '<i class="fa fa-linux"></i><span>  Kali  </span>',
        tooltip: 'Code',
        click: function (value) {


            var text = context.invoke('editor.getSelectedText');


            if (text == "") {
                let $node = $(`<pre class="command-line language-bash" data-user="user" data-host="Kali"><code>|</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {

                let $node = $(`<pre class="command-line language-bash" data-user="user" data-host="Kali"><code>${text}</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            }
        }
    });

    return button.render(); // return button as jquery object
}

let botonKali_Res = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '<i class="fa fa-linux"></i><span>  Kali  </span><i class="fa-solid fa-caret-right"></i>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let $node = $(`<pre class="command-line language-bash" data-user="user" data-host="Kali"  data-output="2-100"><code>${text}</code></pre>`);


            if (text == "") {
                let $node = $(`<pre class="command-line language-bash" data-user="user" data-host="Kali"  data-output="2-100"><code>|</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {

                let $node = $(`<pre class="command-line language-bash" data-user="user" data-host="Kali"  data-output="2-100"><code>${text}</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            }


        }
    });

    return button.render(); // return button as jquery object
}


let botonTargetLin = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '<i class="fa fa-linux"></i><span>  Target  </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');


            if (text == "") {
                let $node = $(`<pre class="command-line language-bash" data-user="user" data-host="Target"><code>|</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {

                let $node = $(`<pre class="command-line language-bash" data-user="user" data-host="Target"><code>${text}</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            }
        }
    });

    return button.render(); // return button as jquery object
}


let botonTargetWin = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '<i class="fa fa-windows"></i><span>  Target  </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');


            if (text == "") {
                let $node = $(`<pre class="command-line language-powershell" data-prompt="C:&#92;Users&#92;user>"><code>|</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {

                let $node = $(`<pre class="command-line language-powershell" data-prompt="C:&#92;Users&#92;user>"><code>${text}</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            }

        }
    });

    return button.render(); // return button as jquery object
}



let botonTarget_S_R_Lin = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '<i class="fa fa-linux"></i><span>  Target  </span><i class="fa-solid fa-caret-right"></i>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');


            if (text == "") {
                let $node = $(`<pre class="command-line language-bash" data-user="user" data-host="Target"  data-output="2-100"><code>|</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {

                let $node = $(`<pre class="command-line language-bash" data-user="user" data-host="Target"  data-output="2-100"><code>${text}</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            }
        }
    });

    return button.render(); // return button as jquery object
}

let botonTarget_R_root = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '<i class="fa fa-linux"></i><span>  T-Root  </span><i class="fa-solid fa-caret-right"></i>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let $node = $(`<pre class="command-line language-bash" data-user="root" data-host="Target"  data-output="2-100"><code>${text}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });

    return button.render(); // return button as jquery object
}

let botonTarget_S_R_Win = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '<i class="fa fa-windows"></i><span>  Target  <i class="fa-solid fa-caret-right"></i>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');



            if (text == "") {
                let $node = $(`<pre class="command-line language-powershell" data-prompt="C:&#92;Users&#92;user>" data-output="2-100"><code>|</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {

                let $node = $(`<pre class="command-line language-powershell" data-prompt="C:&#92;Users&#92;user>" data-output="2-100"><code>${text}</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            }
        }
    });

    return button.render(); // return button as jquery object
}


let botonFtp = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '<span>FTP  </span><i class="fa fa-terminal"></i>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let $node = $(`<pre class="command-line language-ftp" data-prompt="ftp>" data-output="2-100"><code>${text}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });

    return button.render(); // return button as jquery object
}

let botonMysql = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '</i><span>MySql  </span><i class="fa fa-terminal"></i>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let $node = $(`<pre class="command-line language-mysql" data-prompt="mysql >" data-output="2-100"><code>${text}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });

    return button.render(); // return button as jquery object
}
/*=======Codigo====================*/
let botonVim = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: 'VIM',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/\n/g, "<br/>");
            let $node = $(`<pre><code class="language-vim line-numbers">${jim}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonPhp = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa fa-file-code-o"></i><span>  <i class="fa-brands fa-php"></i>  </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/\n/g, "<br/>");
            let $node = $(`<pre><code class="language-php line-numbers match-braces">${jim}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonHtml = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa fa-file-code-o"></i><span>  HTML  </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/\n/g, "<br/>");
            let $node = $(`<pre><code class="language-html line-numbers">${jim}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonPlSql = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa fa-file-code-o"></i><span>  PL/SQL  </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/\n/g, "<br/>");
            let $node = $(`<pre><code class="language-plsql line-numbers">${jim}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonHttp = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa fa-file-code-o"></i><span>  HTTP  </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/\n/g, "<br/>");
            let $node = $(`<pre><code class="language-http line-numbers">${jim}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonXml = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa fa-file-code-o"></i><span>  XML  </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/\n/g, "<br/>");
            let $node = $(`<pre><code class="language-xml line-numbers">${jim}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}
let botonPython = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa fa-file-code-o"></i><span>  Python  </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/\n/g, "<br/>");
            let $node = $(`<pre><code class="language-python line-numbers match-braces">${jim}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonJS = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa fa-file-code-o"></i><span>  JS  </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/\n/g, "<br/>");
            let $node = $(`<pre><code class="language-javascript line-numbers match-braces">${jim}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonJava = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa fa-file-code-o"></i><span>  Java  </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/\n/g, "<br/>");
            let $node = $(`<pre><code class="language-java line-numbers match-braces">${jim}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonBash = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa fa-file-code-o"></i><span>  BASH  </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/\n/g, "<br/>");
            let $node = $(`<pre><code class="language-bash line-numbers match-braces">${jim}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonAtom = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa fa-file-code-o"></i><span>  Atom  </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/\n/g, "<br/>");
            let $node = $(`<pre><code class="language-atom line-numbers">${jim}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonMarkup = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa fa-file-code-o"></i><span>  Markup  </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let jim = text.replace(/\n/g, "<br/>");
            let $node = $(`<pre><code class="language-markup line-numbers">${jim}</code></pre>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

/**/


let botonParrafo = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa-solid fa-paragraph"></i>',
        tooltip: 'p',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let $node = $(`<font color="#83c607">${text}</font>`);
            context.invoke('editor.insertNode', $node[0]);       
                    
        }
    });
    return button.render(); // return button as jquery object
}

let botonConcepto = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa-regular fa-square-minus"></i><span> Detalle </span><i class="fa-solid fa-note-sticky"></i>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            if (text == "") {
                let $node = $(`<details class="seccion_item p-faq js-faq-detalle">
      <summary class="p-pregunta js-faq-pregunta">| <span class="p-icono"></span></summary>
      <div class="p-respuesta js-faq-respuesta">
        <div class="p-respuesta-inner"><p>-</p></div>
      </div></details>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {

                let $node = $(`<details class="seccion_item p-faq js-faq-detalle">
      <summary class="p-pregunta js-faq-pregunta">| <span class="p-icono"></span></summary>
      <div class="p-respuesta js-faq-respuesta">
        <div class="p-respuesta-inner"><p>${text}</p></div>
      </div></details>`);
                context.invoke('editor.insertNode', $node[0]);            }
        }
    });
    return button.render(); // return button as jquery object
}

let botonDetalleTabla = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa-regular fa-square-minus"></i><span> | </span><i class="fa-solid fa-table"></i>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            if (text == "") {
                let $node = $(`<details class="seccion_item p-faq js-faq-detalle">
      <summary class="p-pregunta js-faq-pregunta">| <span class="p-icono"></span></summary>
      <div class="p-respuesta js-faq-respuesta"><div class="p-respuesta-inner"><table class="tabInter"><tbody><tr><td><p>-</p></td></tr></tbody></table></div>
      </div></details>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {

                let $node = $(`<details class="seccion_item p-faq js-faq-detalle">
      <summary class="p-pregunta js-faq-pregunta">| <span class="p-icono"></span></summary>
      <div class="p-respuesta js-faq-respuesta"><div class="p-respuesta-inner"><table class="tabInter"><tbody><tr><td><p>${text}</p></td></tr></tbody></table></div>
      </div></details>`);

                context.invoke('editor.insertNode', $node[0]);
            }
        }
    });
    return button.render(); // return button as jquery object
}


let botonDetaIco = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa-regular fa-square-minus"></i><span> | </span><i class="fa fa-list" aria-hidden="true"></i>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let $node = $(`<details class="seccion_item p-faq js-faq-detalle">
      <summary class="p-pregunta-t js-faq-pregunta">| <span class="p-icono-t"></span></summary>
      <div class="p-respuesta-t js-faq-respuesta">
        <div class="p-respuesta-inner-t"><ul><li>${text}</li></ul></div>
      </div></details>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}

let botonDetaNum = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa-regular fa-square-minus"></i><span> | </span><i class="fa fa-list-ol" aria-hidden="true"></i>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let $node = $(`<details class="seccion_item p-faq js-faq-detalle">
      <summary class="p-pregunta-t js-faq-pregunta">| <span class="p-icono-t"></span></summary>
      <div class="p-respuesta-t js-faq-respuesta">
        <div class="p-respuesta-inner-t"><ol><li>${text}</li></ol></div>
      </div></details>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}


let botonMSF = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '<span>MSF 6  </span><i class="fa fa-terminal"></i>',
        tooltip: 'p',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');


            if (text == "") {
                let $node = $(`<pre class="command-line language-ruby" data-prompt="msf6 " data-output="2-100"><code>-</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {
                let $node = $(`<pre class="command-line language-ruby" data-prompt="msf6 " data-output="2-100"><code>${text}</code></pre>`);
                context.invoke('editor.insertNode', $node[0]);
            }
        }
    });

    return button.render(); // return button as jquery object
}


let botonHola = function (context) {
    var ui = $.summernote.ui;

    // create button
    var button = ui.button({
        contents: '<i class="fa fa-child"/> Hello',
        tooltip: 'hello',
        click: function () {
            // invoke insertText method with 'hello' on editor module.
            context.invoke('editor.insertText', `<pre class="command-line language-ruby" data-prompt="msf6 >" data-output="2-100"><code>Hola</code></pre>`);
        }
    });

    return button.render(); // return button as jquery object
}
let botonTablaUni = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa-solid fa-table-columns"></i><span> Base </span>',
        tooltip: 'Code',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');
            let $node = $(`<table class="tablaPentUni"><thead><tr><th>${text}</th><th>T</th></tr></thead><tbody><tr><td>*</td><td>*</td></tr><tr><td>*</td><td>*</td></tr></tbody></tr></table>`);
            context.invoke('editor.insertNode', $node[0]);
        }
    });
    return button.render(); // return button as jquery object
}


let botonPoweShell = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '<span>PS  </span><i class="fa fa-terminal"></i>',
        tooltip: 'p',
        click: function (value) {
            var text = context.invoke('editor.getSelectedText');

            if (text == "") {
                let $node = $(`<div style="border:2px solid #141d2b; background:#141d2b; "><div class="psTitulo"><span style="padding:5px; color:#9fef00; font-size:24px;">⧈</span><span > Windows PowerShell </span></div><pre class="language-powershell-session" style="background: #012456; margin:0;font-size:14px;"><code>|</code></pre></div>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {
                let $node = $(`<div style="border:2px solid #141d2b; background:#141d2b; "><div class="psTitulo"><span style="padding:5px; color:#9fef00; font-size:24px;">⧈</span><span > Windows PowerShell </span></div><pre class="language-powershell-session" style="background: #012456; margin:0; font-size:14px;"><code>${text}</code></pre></div>`);
                context.invoke('editor.insertNode', $node[0]);
            }
        }
    });
    return button.render();
}

let botonShellLi = function (context) {
    let ui = $.summernote.ui;
    // create button
    let button = ui.button({
        contents: '<i class="fa fa-file-code-o"></i><span>  Bash</span>',
        tooltip: 'Code',
        click: function (value) {

            var text = context.invoke('editor.getSelectedText');


            if (text == "") {
                let $node = $(`<pre><code class="language-bash line-numbers match-braces">|</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {
                let $node = $(`<pre><code class="language-bash">${text}</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            }


        }
    });
    return button.render(); // return button as jquery object
}


let boKali_Res_Lit = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '<i class="fa fa-linux"></i><span>  Kali Lite  </span><i class="fa-solid fa-caret-right"></i>',
        tooltip: 'Code',
        click: function (value) {

            var text = context.invoke('editor.getSelectedText');

            if (text == "") {
                let $node = $(`<pre class="command-line language-bash"  data-prompt=" $"  data-output="2-100"><code>|</code></pre>`);
                context.invoke('editor.insertNode', $node[0]);
            } else {
                let $node = $(`<pre class="command-line language-bash" data-prompt=" $"  data-output="2-100"><code>${text}</code></pre>`);
                context.invoke('editor.insertNode', $node[0]);
            }



        }
    });

    return button.render(); // return button as jquery object
}


let boPsShellPerso = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '<i class="fa fa-windows"></i><span>  PS  </span><i class="fa-solid fa-caret-right"></i>',
        tooltip: 'Code',
        click: function (value) {

            var text = context.invoke('editor.getSelectedText');

            if (text == "") {
                let $node = $(`<pre class="command-line language-powershell" data-prompt="PS C:\\Users\\Li>" data-output="2-100" style="background: #012456; " ><code>|</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {

                let $node = $(`<pre class="command-line language-powershell" data-prompt="PS C:\\Users\\Li>" data-output="2-100" style="background: #012456; " ><code>${text}</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            }


        }
    });

    return button.render(); // return button as jquery object
}


let boCmdPerso = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: '<i class="fa fa-windows"></i><span>  CMD  </span><i class="fa-solid fa-caret-right"></i>',
        tooltip: 'Code',
        click: function (value) {

            var text = context.invoke('editor.getSelectedText');

            if (text == "") {
                let $node = $(`<pre class="command-line language-cmd" data-prompt="C:\\Users\\Li>" data-output="2-100" style="background: #231a24; " ><code>|</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {

                let $node = $(`<pre class="command-line language-cmd" data-prompt="C:\\Users\\Li>" data-output="2-100" style="background: #231a24; " ><code>${text}</code></pre>`);

                context.invoke('editor.insertNode', $node[0]);
            }
        }
    });
    return button.render(); // return button as jquery object

}



let botSeguDefTab = function (context) {
    let ui = $.summernote.ui;

    // create button
    let button = ui.button({
        contents: 'Título_T',
        tooltip: 'Code',
        click: function (value) {

            var text = context.invoke('editor.getSelectedText');

            if (text == "") {
                let $node = $(`                               
                                    <table class="tablaSegPlant" style="border-collapse: separate; border-spacing: 3px 2px; width: 97%; ">
                                        <tbody>
                                            <tr>
                                                <td class="tabPlantHab1">[1]</td>
                                                <td class="tabPlantHab2">Evidencia</td>
                                                <td class="tabPlantHab3">-</td>
                                            </tr>
                                        </tbody>
                                    </table><br>`);

                context.invoke('editor.insertNode', $node[0]);
            } else {

                let $node = $(`                                   
                                    <table class="tablaSegPlant" style="border-collapse: separate; border-spacing: 3px 2px; width: 97%; ">
                                        <tbody>
                                            <tr>
                                                <td class="tabPlantHab1">[1]</td>
                                                <td class="tabPlantHab2">Evidencia</td>
                                                <td class="tabPlantHab3">${text}</td>
                                            </tr>
                                        </tbody>
                                    </table>`);

                context.invoke('editor.insertNode', $node[0]);
            }
        }
    });
    return button.render(); // return button as jquery object

}